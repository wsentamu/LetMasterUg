@page
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "Your Home page";
    //data prepping
    var propertyNames = Model.perPropertyOccupancies?.Select(o => o.PropertiesName).ToArray() ?? new string[0];
    var occupancyRates = Model.perPropertyOccupancies?.Select(o => o.OccupancyRate ?? 0).ToArray() ?? new decimal[0];
}

<div class="container-fluid dashboard">
    <div class="row">
        
        @if (User.IsInRole("Admin"))
        {
            <h4>System Administration</h4>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Total Users</h5>
                                <p class="card-text">@Model.userStats?.UserCount</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Users per Role</h5>
                                @if (Model.userStats?.RolesCount != null && Model.userStats.RolesCount.Count > 0)
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var roleCount in Model.userStats.RolesCount)
                                        {
                                            <li class="list-group-item">@roleCount.RoleLabel: @roleCount.RoleCount</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="card-text">No role data available.</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Latest Transactions</h5>
                                @if (Model.transactions != null && Model.transactions.Count > 0)
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var transaction in Model.transactions)
                                        {
                                            <li class="list-group-item">@transaction.Description: @transaction.Amount.ToString("C")</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="card-text">No recent transactions available.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br></br>
        }
        
        @if (User.IsInRole("Manager"))
        {
            <h4>Property Management</h4>
            <div class="col-md-12">
                <canvas id="occupancyChart"></canvas>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Property Occupancy Summary</h5>
                            @if (Model.perPropertyOccupancies != null && Model.perPropertyOccupancies.Count > 0)
                            {
                                <table class="table table-striped table-sm">
                                    <thead>
                                        <tr>
                                            <th scope="col">Property Name</th>
                                            <th scope="col">Total Units</th>
                                            <th scope="col">Occupied Units</th>
                                            <th scope="col">Occupancy Rate</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var occupancy in Model.perPropertyOccupancies)
                                            {
                                                <tr>
                                                    <td>@occupancy.PropertiesName</td>
                                                    <td>@occupancy.TotalUnits</td>
                                                    <td>@occupancy.TotalOccupied</td>
                                                    <td>@occupancy.OccupancyRate%</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else
                                {
                                    <p class="card-text">No occupancy data available.</p>
                                }
                            </div>
                        </div>
                    <br></br>
                    </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Financial Summary (6 months)</h5>
                                @if (Model.incomeExpenses != null && Model.incomeExpenses.Count > 0)
                                {
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">Property Name</th>
                                                <th scope="col">Total Rent Receivable</th>
                                                <th scope="col">Total Rent Paid</th>
                                                <th scope="col">Total Expenses</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var exp in Model.incomeExpenses)
                                            {
                                                <tr>
                                                    <td>@exp.PropertyName</td>
                                                    <td>@exp.TotalRentRecievable.ToString("C")</td>
                                                    <td>@exp.TotalIncomeRecieved.ToString("C")</td>
                                                    <td>@exp.TotalExpenses.ToString("C")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else
                                {
                                    <p class="card-text">No debtor data available.</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Highest Debtor Accounts</h5>
                                @if (Model.debtors != null && Model.debtors.Count > 0)
                                {
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">Property Name</th>
                                                <th scope="col">Unit No</th>
                                                <th scope="col">Tenant Name</th>
                                                <th scope="col">Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var debtor in Model.debtors)
                                            {
                                                <tr>
                                                    <td>@debtor.PropertyName</td>
                                                    <td>@debtor.UnitNo</td>
                                                    <td>@debtor.TenantName</td>
                                                    <td>@debtor.Amount.ToString("C")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else
                                {
                                    <p class="card-text">No debtor data available.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br></br>
        }
        @if (User.IsInRole("Tenant"))
        {
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Tenant Accounts</h5>
                        @if (Model.tenantAccounts != null && Model.tenantAccounts.Count > 0)
                        {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th scope="col">Property Name</th>
                                        <th scope="col">Property Manager/Owner</th>
                                        <th scope="col">Unit No.</th>
                                        <th scope="col">Agreed Rate</th>
                                        <th scope="col">Current Balance</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var debtor in Model.tenantAccounts)
                                    {
                                        <tr>
                                            <td>@debtor.PropertyName</td>
                                            <td>@debtor.PropertyManager</td>
                                            <td>@debtor.UnitName</td>
                                            <td>@debtor.AgreedRate!.Value.ToString("C")</td>
                                            <td>@debtor.CurrentBalance!.Value.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="card-text">No debtor data available.</p>
                        }
                    </div>
                </div>
            </div>
            <br/>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Your Debts</h5>
                                @if (Model.tenantDebts != null && Model.tenantDebts.Count > 0)
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var debt in Model.tenantDebts)
                                        {
                                            <li class="list-group-item">@debt.PropertyName (@debt.UnitNo): @debt.Amount</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="card-text">No debt data available.</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Your Latest Transactions</h5>
                                @if (Model.tenantTransactions != null && Model.tenantTransactions.Count > 0)
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var transaction in Model.tenantTransactions)
                                        {
                                            <li class="list-group-item">@transaction.TransactionType @transaction.Description: @transaction.Amount</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="card-text">No recent transactions available.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var propertyNames = @Html.Raw(JsonConvert.SerializeObject(propertyNames));
            var occupancyRates = @Html.Raw(JsonConvert.SerializeObject(occupancyRates));

            if (propertyNames.length > 0 && occupancyRates.length > 0) {
                var ctx = document.getElementById('occupancyChart').getContext('2d');
                var occupancyData = {
                    labels: propertyNames,
                    datasets: [{
                        label: 'Occupancy Rate',
                        data: occupancyRates,
                        backgroundColor: 'rgba(7, 131, 240, 0.72)', // Background color for bars
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        barThickness: 20, // Set to desired thickness
                        maxBarThickness: 30, // Maximum thickness to maintain visual consistency
                        barPercentage: 0.7 // Percentage of the grid width
                    }]
                };

                var occupancyChart = new Chart(ctx, {
                    type: 'bar',
                    data: occupancyData,
                    options: {
                        indexAxis: 'y', // Invert the axes
                        scales: {
                            x: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function (value) { return value + "%"; }
                                }
                            },
                            y: {
                                ticks: {
                                    autoSkip: true,
                                    maxTicksLimit: 20 // Control the number of ticks
                                }
                            }
                        },
                        responsive: true, // Enable responsive behavior
                        maintainAspectRatio: false, // Adjust aspect ratio
                        layout: {
                            padding: {
                                left: 10,
                                right: 10,
                                top: 10,
                                bottom: 10
                            }
                        }
                    }
                });
            }
        });
    </script>
}